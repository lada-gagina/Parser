namespace AST

[<AbstractClass>]
type Type(name : string, dimension : int, pos : Position) =
    inherit Node(pos)
    member x.Name      = name
    member x.Dimension = dimension

    override x.ToString() = sprintf "%s%s" name (String.replicate dimension "[]")

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type CustomType(name : string, dimension : int, pos : Position) =
    inherit Type(name, dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[<AbstractClass>]
type BasicType(name : string, dimension : int, pos : Position) =
    inherit Type(name, dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type ByteType(dimension : int, pos : Position) =
    inherit BasicType("byte", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type ShortType(dimension : int, pos : Position) =
    inherit BasicType("short", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type IntType(dimension : int, pos : Position) =
    inherit BasicType("int", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type LongType(dimension : int, pos : Position) =
    inherit BasicType("long", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type FloatType(dimension : int, pos : Position) =
    inherit BasicType("float", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type DoubleType(dimension : int, pos : Position) =
    inherit BasicType("double", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type CharType(dimension : int, pos : Position) =
    inherit BasicType("char", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type StringType(dimension : int, pos : Position) =
    inherit BasicType("string", dimension, pos)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

type BooleanType(dimension : int, pos : Position) =
    inherit BasicType("boolean", dimension, pos)